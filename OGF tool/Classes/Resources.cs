namespace OGF_tool
{
    internal static class Resources
    {
        public static class SoCSkeleton
        {
            public static double[] Skeleton()
            {
                double[] skel_data =
                {
                    0, 0.984, -0.0000003088938,
                    0.0000003139118, -3.141589, 1.570798,
                    0, 0.119911, 0,
                    0.009523549, 0.1266493, 3.066947,
                    0.39765, 0, 0,
                    0, 0.315099, 0,
                    0.470818, 0, 0,
                    0.00000009094502, -0.1880936, 0.07525115,
                    0.133371, 0, 0.157571,
                    0, -1.570796, 0,
                    0, -0.119911, 0,
                    -0.00952107, 0.1266495, -3.066943,
                    0.39765, 0, 0,
                    0, 0.315099, 0,
                    0.470818, 0, 0,
                    -0.00000009094502, -0.1880936, -0.07525115,
                    0.133371, 0, 0.157571,
                    0, -1.570796, 0,
                    0.102435, 0, -0.021384,
                    0.000004000796, -0.000796, 0.0000009999997,
                    0.111902, 0, -0.000305,
                    0, 0, 0,
                    0.38257, 0, -0.000014,
                    0, 0, 0,
                    0.01715, 0, -0.000043,
                    0.0000002588187, -0.261799, 0.0000009659259,
                    0.055994, 0, 0,
                    0.0000002595894, 0.262597, -0.0000009657191,
                    0.076945, 0.029394, 0.077478,
                    0.000002016768, -1.614097, 0.000005053203,
                    0.076945, -0.030405, 0.077478,
                    0.000002016768, -1.614097, 0.000005053203,
                    0.07603, 0, 0.065295,
                    0.0000003623246, -0.749349, 0.000001464265,
                    0.038337, 0, 0.022872,
                    0.000002170903, -1.949106, 0.000001376668,
                    -0.026856, 0.064643, 0.014276,
                    0.000003145692, -2.878997, 1.370797,
                    0.172657, 0, 0,
                    -0.0007578674, -0.01889541, -0.1258966,
                    0.283254, 0, 0,
                    0, 0.41042, 0,
                    0.249079, 0, 0,
                    1.42879, -0.3131406, -0.2383885,
                    0.023767, -0.048963, 0.005823,
                    -1.052968, 1.061769, -1.24612,
                    0.034311, 0, 0,
                    -0.0552254, 0.180391, 0.03987845,
                    0.02494, 0, 0,
                    0, 0.218166, 0,
                    0.098743, -0.023509, -0.00707,
                    -0.04976935, -0.2123117, -0.134334,
                    0.036609, 0, 0,
                    0, 0, 0,
                    0.022123, 0, 0,
                    0, 0, 0,
                    0.099314, 0.016995, -0.008951,
                    0.2447276, -0.312224, 0.249761,
                    0.036128, 0, 0,
                    0, 0, 0,
                    0.032111, 0, 0,
                    0, 0, 0,
                    -0.026856, -0.064643, 0.014276,
                    0.000002735055, -2.878997, -1.370795,
                    0.172657, 0, 0,
                    0.0007578674, -0.01889541, 0.1258966,
                    0.283254, 0, 0,
                    0, 0.41042, 0,
                    0.249079, 0, 0,
                    -1.486806, -1.827145, 1.728851,
                    0.023767, 0.048963, 0.005823,
                    1.199971, 1.161526, 1.49836,
                    0.034311, 0, 0,
                    0, 0.427606, 0,
                    0.02494, 0, 0,
                    0, 0.218166, 0,
                    0.098743, 0.023509, -0.00707,
                    0.03804783, -0.132135, 0.1469866,
                    0.036609, 0, 0,
                    0, 0, 0,
                    0.022123, 0, 0,
                    0, 0, 0,
                    0.099314, -0.016995, -0.008951,
                    -0.2090806, -0.1311165, -0.2192104,
                    0.036128, 0, 0,
                    0, 0, 0,
                    0.032111, 0, 0,
                    0, 0, 0,
                    0.036138, 0.220181, 0.006917,
                    -1.411583, 2.083956, 1.183667,
                };

                return skel_data;
            }

            public static float[] Rot(int bone)
            {
                float[] vec = new float[3];

                for (int i = 3; i < 6; i++)
                    vec[i - 3] = (float)Skeleton()[bone * 6 + i];

                return vec;
            }

            public static float[] Pos(int bone)
            {
                float[] vec = new float[3];

                for (int i = 0; i < 3; i++)
                    vec[i] = (float)Skeleton()[bone * 6 + i];

                return vec;
            }
        }

        public static class CoPSkeleton
        {
            public static double[] Skeleton()
            {
                double[] skel_data =
                {
                    0, 0, 0,
                    0, 0, 0,
                    0, 0.9874378, 0,
                    0, 0, 0,
                    0.000006965129, 0, -0.000004505597,
                    0.0000000000000003148227, -0.000002796319, 1.570796,
                    -0.000000171855, 0.1199109, 0.0000002094551,
                    0.009523769, 0.1266495, 3.066947,
                    0.3976503, -0.000000003404672, -0.00000001026554,
                    -0.00000001519371, 0.3150988, 0.00000004661237,
                    0.4708183, -0.00000002392988, 0.00000000426354,
                    -0.0000002234946, -0.1880936, 0.07525115,
                    0.1333705, -0.0000000001386461, 0.1575713,
                    0.00000004559643, -1.570796, 0.00000002980244,
                    0.000000171835, -0.1199109, -0.0000001231301,
                    -0.009521376, 0.1266496, -3.066943,
                    0.3976502, -0.00000001024921, -0.00000000321916,
                    0, 0.3150987, 0,
                    0.4708183, -0.000000001084482, 0.00000000429862,
                    0.000000232743, -0.1880936, -0.07525138,
                    0.1333705, -0.0000000001378468, 0.1575713,
                    -0.00000000006534854, -1.570796, -0.00000002980221,
                    0.1024347, 0.0000001764555, -0.02138427,
                    0.000004161513, -0.0007963181, 0.000001430303,
                    0.1119023, -0.0000000006548083, -0.0003046307,
                    0, 0, 0,
                    0.3825698, 0.0000000006113871, -0.00001364865,
                    0, 0, 0,
                    0.01714963, -0.00000000008996306, -0.00004306881,
                    0.00000007813378, -0.2617992, 0.0000006685484,
                    0.05599388, 0.000000002852249, -0.00000001904556,
                    0.00000009812037, 0.2625968, -0.0000006664245,
                    0.07694521, 0.02939447, 0.07747798,
                    0.000003019215, -1.614097, 0.000004944119,
                    0.07694521, -0.0304053, 0.0774781,
                    0.000003019215, -1.614097, 0.000004944119,
                    0.07602981, 0.0000001249751, 0.0652945,
                    0.0000002893611, -0.7493488, 0.000001210088,
                    0.03833721, 0.00000006117957, 0.02287193,
                    0.000002084246, -1.949105, 0.000001463088,
                    -0.02685647, 0.06464338, 0.01427566,
                    0.000002684166, -2.878997, 1.370797,
                    0.1726568, 0.00000006472993, 0.000000001065337,
                    -0.0007578243, -0.01889544, -0.1258967,
                    0.283254, -0.00000003957785, 0.0000000002230537,
                    0.00000002101537, 0.4104198, -0.00000004829672,
                    0.2490792, -0.00000003288679, 0.00000002607684,
                    1.47584, 2.779099, 2.958112,
                    0.0223058, -0.04621678, 0.01463904,
                    -2.042849, -1.089118, 0.8684033,
                    0.03431111, 0.00000003466169, 0.000000002052997,
                    0, 0.396997, 0,
                    0.02494036, -0.00000002864075, 0.00000002670371,
                    0, 0.1875576, 0,
                    0.1002089, -0.03153298, -0.008825921,
                    -0.06949481, -0.2974725, -0.2253211,
                    0.0366092, -0.00000001193696, -0.00000004230049,
                    0, 0, 0,
                    0.02212267, -0.00000000154762, -0.00000002918504,
                    0, 0, 0,
                    0.1006388, 0.009742407, -0.01053787,
                    -0.02283545, -0.3045424, 0.09937527,
                    0.03793443, -0.00000001144697, 0.00000001015291,
                    0, 0.00000003698843, 0,
                    0.03117614, 0.000000005129899, 0.00000002452998,
                    0, 0.00000003698842, 0,
                    -0.02685646, -0.06464332, 0.01427602,
                    0.000002666797, -2.878997, -1.370796,
                    0.1726567, -0.0000001339806, 0.0000000003915505,
                    0.0007578236, -0.01889544, 0.1258967,
                    0.2832541, -0.00000005989793, -0.00000000003964338,
                    -0.00000002598895, 0.4104197, 0.00000005972682,
                    0.2490792, 0.00000003889373, 0.00000001179308,
                    -1.665753, -0.3624942, 0.1834814,
                    0.02230584, 0.04621679, 0.0146391,
                    1.098744, 2.052475, 2.273189,
                    0.03431112, 0.00000001522137, 0.000000004061995,
                    0.00000002230149, 0.396997, -0.000000000000000000000000187,
                    0.02494035, 0.00000006101531, 0.00000002339082,
                    0, 0.1875577, 0,
                    0.1002089, 0.031533, -0.008825841,
                    0.06949466, -0.2974725, 0.2253212,
                    0.0366092, 0.0000000224541, -0.00000003315755,
                    0, 0, 0,
                    0.02212269, -0.000000009531528, -0.00000003620777,
                    0, 0, 0,
                    0.1006388, -0.009742414, -0.01053781,
                    0.02283542, -0.3045425, -0.09937532,
                    0.03793444, 0.000000009649773, -0.00000005810898,
                    0, 0, 0,
                    0.03117616, 0.000000008374493, -0.00000005140922,
                    0, 0, 0,
                    0.05673933, 0.2068873, -0.003061781,
                    -0.9374446, 2.655577, 0.6992627
                };

                return skel_data;
            }

            public static float[] Rot(int bone)
            {
                float[] vec = new float[3];

                for (int i = 3; i < 6; i++)
                    vec[i - 3] = (float)Skeleton()[bone * 6 + i];

                return vec;
            }

            public static float[] Pos(int bone)
            {
                float[] vec = new float[3];

                for (int i = 0; i < 3; i++)
                    vec[i] = (float)Skeleton()[bone * 6 + i];

                return vec;
            }
        }
    }
}
